% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rsisVIVE.R
\name{rsisVIVE}
\alias{rsisVIVE}
\title{Robustified Some Valid Some Invalid Instrumental Variable Estimator}
\usage{
rsisVIVE(Y, D, Z, method = c("BIC", "PE_MIN", "PE_SE"), ncores = 1)
}
\arguments{
\item{Y}{matrix array nx1 specifying the outcome values}

\item{D}{matrix array nx1 specifying the exposure values}

\item{Z}{matrix array nxL specifying the instruments where L is the number of instruments}

\item{method}{character string specifying the type of method to obtain the step one (alpha) coefficients. If 'BIC' is chosen, it uses the robust BIC as specified in the Sparse Least Trimmed Squares method (Alfons et. al., 2013). If 'PE_MIN' or 'PE_SE' is chosen, the function uses a 10-fold cross-validation minimizing the Root Trimmed Mean Squared Prediction Error and selecting the minimum or the one standard error, correspondingly. Note that the selection procedure follows the majority rule as outlined in the}

\item{ncores}{numeric indicating the number of cores used for the cross-validation}
}
\value{
description
}
\description{
This function provides the Robustified Some Valid Some Invalid Instrumental Variable Estimator (rsisVIVE) coefficients for step one (alpha) and step two (beta) of the instrumental variable estimation. The algorithm closely follows Kang et. al.'s some invalid some valid instrumental variable estimator (2016) however, the rsisVIVE can tolerate large proportions of contamination both in the exposure and/or outcome variables in addition to tolerating some invalid instrumental variables.
}
\examples{
Y <- rnorm(100)
D <- rnorm(100)
Z <- matrix(rnorm(500), nrow = 100, ncol = 5)
results <- rsisVIVE(Y, D, Z, method = 'PE_SE', ncores = 4)
}
